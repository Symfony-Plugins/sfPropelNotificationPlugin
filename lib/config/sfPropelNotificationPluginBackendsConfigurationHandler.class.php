<?php
/*
 * This file is part of the sfPropelNotificationPlugin package.
 * 
 * (c) 2006-2007 Tristan Rivoallan <tristan@rivoallan.net>
 * 
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

/**
 * Configuration handler for plugin's backends.yml config file.
 * 
 * @package     sfPropelNotificationPlugin
 * @subpackage  config
 * @author      Tristan Rivoallan <tristan@rivoallan.net>
 * 
 * @see         http://www.symfony-project.com/book/trunk/19-Mastering-Symfony-s-Configuration-Files
 */
class sfPropelNotificationPluginBackendsConfigurationHandler extends sfYamlConfigHandler
{
  /**
   * Executes this configuration handler.
   *
   * @param array An array of absolute filesystem path to a configuration file.
   *
   * @return string Data to be written to a cache file.
   *
   * @throws sfConfigurationException  If a requested configuration file does not exist or is not readable.
   * @throws sfParseException          If a requested configuration file is improperly formatted.
   */
  public function execute($configFiles)
  {

    // parse the yaml
    $raw_config_array = $this->parseYamls($configFiles);

    // Parse configuration
    $compiled_configuration = array();

    // -- Data sources
    foreach ($raw_config_array as $backend_name => $backend_spec)
    {
      // Only process enabled datasources
      if (isset($backend_spec['enabled']) && $backend_spec['enabled'] === true)
      {
        $this->parseBackend($backend_name, $backend_spec);
        $compiled_configuration[$backend_name] = $backend_spec;
      }
    }

    // compile data
    $retval = sprintf("<?php\n".
                      "// auto-generated by %s\n".
                      "// date: %s\nsfConfig::set('sfPropelNotificationPlugin_backends', \n%s\n);\n?>",
                      __CLASS__, date('Y/m/d H:i:s'), var_export($compiled_configuration, true));

    return $retval;
  }
  
  private function parseBackend($name, $spec)
  {
    
    if (!class_exists($spec['class']))
    {
      $msg = sprintf('Notification backend class "%s" does not exist', $spec['class']);
      throw new sfParseException($msg);
    }

    if (!isset($spec['params']) || !is_array($spec['params']))
    {
      $spec['params'] = array();
    }
  }
}
